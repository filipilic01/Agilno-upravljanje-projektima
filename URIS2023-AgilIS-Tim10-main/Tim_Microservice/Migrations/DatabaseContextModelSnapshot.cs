// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tim_Microservice.Data;

#nullable disable

namespace Tim_Microservice.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tim_Microservice.Models.ClanTima", b =>
                {
                    b.Property<Guid>("ClanTimaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClanTimaId");

                    b.HasIndex("TimId");

                    b.ToTable("ClanTima");
                });

            modelBuilder.Entity("Tim_Microservice.Models.Tim", b =>
                {
                    b.Property<Guid>("TimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojClanova")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivTima")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TimID");

                    b.ToTable("Tim");
                });

            modelBuilder.Entity("Tim_Microservice.Models.ClanTima", b =>
                {
                    b.HasOne("Tim_Microservice.Models.Tim", "Tim")
                        .WithMany()
                        .HasForeignKey("TimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tim");
                });
#pragma warning restore 612, 618
        }
    }
}
