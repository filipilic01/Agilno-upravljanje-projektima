// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using User_Service.Models;

#nullable disable

namespace User_Service.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240212003416_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("User_Service.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", null, t =>
                        {
                            t.HasCheckConstraint("CK_User_Role", "Role IN (0, 1, 2, 3, 4)");
                        });

                    b.HasData(
                        new
                        {
                            UserId = new Guid("9d8bab08-f442-4297-8ab5-ddfe08e335f0"),
                            Email = "anaStanic@gmail.com",
                            Name = "Ana",
                            Password = "password1",
                            Role = 3,
                            Surname = "Stanic",
                            Username = "anaS"
                        },
                        new
                        {
                            UserId = new Guid("9d8bab08-f442-4297-8ab5-ddfe08e335f1"),
                            Email = "petarP@gmail.com",
                            Name = "Petar",
                            Password = "password2",
                            Role = 1,
                            Surname = "Pap",
                            Username = "petarP"
                        },
                        new
                        {
                            UserId = new Guid("9d8bab08-f442-4297-8ab5-ddfe08e335f2"),
                            Email = "admin@gmail.com",
                            Name = "Admin",
                            Password = "password3",
                            Role = 0,
                            Surname = "Adnmin",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = new Guid("9d8bab08-f442-4297-8ab5-ddfe08e335f3"),
                            Email = "milicaK@gmail.com",
                            Name = "Milica",
                            Password = "password4",
                            Role = 0,
                            Surname = "Kokic",
                            Username = "milicaK"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
