// <auto-generated />
using System;
using FAQsection_MicroService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FAQsection_MicroService.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FAQsection_MicroService.Entities.Answer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            AnswerId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c5"),
                            AnswerText = "The software supports agile project management through features like iteration planning, task tracking, resource allocation, and transparent team communication.",
                            QuestionId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c3")
                        },
                        new
                        {
                            AnswerId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c6"),
                            AnswerText = "Yes, the software tool is flexible and can accommodate various agile methodologies, allowing users to customize it to their team's needs.",
                            QuestionId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c4")
                        });
                });

            modelBuilder.Entity("FAQsection_MicroService.Entities.FAQSection", b =>
                {
                    b.Property<Guid>("FAQSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("numberOfQuestions")
                        .HasColumnType("int");

                    b.HasKey("FAQSectionId");

                    b.ToTable("FAQSections");

                    b.HasData(
                        new
                        {
                            FAQSectionId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            numberOfQuestions = 3
                        },
                        new
                        {
                            FAQSectionId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c1"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            numberOfQuestions = 2
                        },
                        new
                        {
                            FAQSectionId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c2"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            numberOfQuestions = 1
                        });
                });

            modelBuilder.Entity("FAQsection_MicroService.Entities.Question", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FAQSectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.HasIndex("FAQSectionId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c3"),
                            FAQSectionId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c2"),
                            QuestionText = "How does the software support agile project management?"
                        },
                        new
                        {
                            QuestionId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c4"),
                            FAQSectionId = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c1"),
                            QuestionText = "Does the software tool support different agile methodologies?"
                        });
                });

            modelBuilder.Entity("FAQsection_MicroService.Entities.Answer", b =>
                {
                    b.HasOne("FAQsection_MicroService.Entities.Question", "question")
                        .WithOne("answer")
                        .HasForeignKey("FAQsection_MicroService.Entities.Answer", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("FAQsection_MicroService.Entities.Question", b =>
                {
                    b.HasOne("FAQsection_MicroService.Entities.FAQSection", "faqSection")
                        .WithMany("Questions")
                        .HasForeignKey("FAQSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("faqSection");
                });

            modelBuilder.Entity("FAQsection_MicroService.Entities.FAQSection", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("FAQsection_MicroService.Entities.Question", b =>
                {
                    b.Navigation("answer")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
